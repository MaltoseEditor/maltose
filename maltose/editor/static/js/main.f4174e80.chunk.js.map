{"version":3,"sources":["view/Components/Sider.js","Api/api.js","view/Components/Form/ArticleDetail.js","view/Components/Form/ImageList.js","view/Components/Main.js","view/App.js","serviceWorker.js","index.js"],"names":["Option","Sider","props","editArticle","article","setEditedArticle","openArticleInWeb","window","open","slug","setCorpus","corpus","setState","state","searchValue","this","articles","length","filter","item","title","toLowerCase","indexOf","name","ref","className","style","width","height","overflow","minHeight","size","header","placeholder","onChange","e","target","value","allowClear","showSearch","marginTop","optionFilterProp","filterOption","input","option","children","corpuses","map","footer","bordered","dataSource","renderItem","Item","actions","shape","icon","onClick","wordBreak","ps","PerfectScrollbar","refs","sider","update","destroy","Component","axios","defaults","withCredentials","URL","ap","create","xsrfHeaderName","xsrfCookieName","alterArticle","id","data","patch","newCorpus","post","CorpusCreateForm","onCancel","setVisible","onCreate","form","getFieldsValue","then","rep","pushCorpus","message","success","catch","err","notification","error","description","response","duration","console","log","visible","getFieldDecorator","okText","onOk","layout","label","rules","required","React","ArticleForm","setAddCorpusStatus","status","addCorpusStatus","onClose","resetFields","onSubmit","source","body","submiting","_tags","_lock","i","j","tags","push","newTag","tag","pushTag","_submit","self","setTimeout","initArticle","newArticle","pushArticle","formItemLayout","labelCol","sm","span","wrapperCol","formCheckboxLayout","initialValue","max","whitespace","valuePropName","is_public","disabled","marginLeft","marginBottom","fontSize","color","is_draft","has_timeliness","mode","key","placement","arrowPointAtCenter","position","right","bottom","left","borderTop","padding","background","textAlign","marginRight","type","loading","clipboard","ClipboardJS","on","text","clearSelection","action","trigger","UploadImage","onError","uploading","onSuccess","check","event","files","obj","file","submit","zIndex","top","opacity","cursor","accept","ImageList","handlePreviewCancel","previewVisible","handlePreview","previewImage","url","thumbUrl","uploadImage","article_id","image","FormData","append","headers","newImage","filelist","deleteImage","image_id","delete","delImage","splice","nextProps","data-clipboard-text","href","rel","backgroundImage","backgroundSize","backgroundPosition","alt","src","Main","setDetailVisible","detailVisible","setImageVisible","imagesVisible","get","renderMarkdown","code","render_task","clearTimeout","html","result","onCodeChange","newCode","editedArticle","save_task","save","saving","handleKeyDown","charCode","String","fromCharCode","which","ctrlKey","metaKey","preventDefault","gutter","onKeyDown","borderBottom","display","lineHeight","float","language","theme","options","selectOnLineNumbers","wordWrap","minimap","enabled","overflowY","dangerouslySetInnerHTML","__html","document","querySelector","App","unshift","Boolean","location","hostname","match","moment","locale","ReactDOM","render","zh_CN","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4174e80.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { List, Input, Button, Select } from 'antd';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\nconst { Option } = Select;\n\nclass Sider extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchValue: \"\",\n            corpus: \"\",\n        };\n    }\n\n    editArticle = (article) => {\n        return () => {\n            this.props.setEditedArticle(article);\n        }\n    }\n    openArticleInWeb = (article) => {\n        return () => {\n            window.open('/articles/' + article.slug + '/');\n        }\n    }\n\n    setCorpus = (corpus) => {\n        this.setState({ corpus: corpus })\n    }\n\n    render() {\n        const { searchValue, corpus } = this.state;\n        let articles = this.props.articles;\n        if (searchValue && articles.length >= 0) {\n            articles = articles.filter(item => { return item.title.toLowerCase().indexOf(searchValue.toLowerCase()) > -1; })\n        }\n        if (corpus && articles.length >= 0) {\n            articles = articles.filter(item => { return item.corpus !== null && item.corpus.name === corpus })\n        }\n        return (\n            <div ref=\"sider\" className=\"ps\" style={{ width: '100%', height: \"100%\", overflow: \"auto\" }}>\n                <List\n                    style={{ minHeight: \"100%\" }}\n                    size=\"large\"\n                    header={<div>\n                        <Input\n                            placeholder=\"对标题进行搜索\"\n                            onChange={e => { this.setState({ \"searchValue\": e.target.value }) }}\n                            style={{ width: '100%' }}\n                            allowClear\n                        />\n                        <Select\n                            showSearch\n                            style={{ width: \"100%\", marginTop: 10 }}\n                            placeholder=\"选择文集\"\n                            optionFilterProp=\"children\"\n                            filterOption={(input, option) =>\n                                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            onChange={this.setCorpus}\n                        >\n                            <Option value={\"\"}>{\"杂记\"}</Option>\n                            {\n                                this.props.corpuses.map(corpus => {\n                                    return <Option value={corpus.name}>{corpus.name}</Option>\n                                })\n                            }\n                        </Select>\n                    </div>}\n                    footer={<div></div>}\n                    bordered\n                    dataSource={articles}\n                    renderItem={item => (\n                        <List.Item\n                            actions={[\n                                <Button shape=\"circle\" icon=\"edit\" onClick={this.editArticle(item)} />,\n                                <Button shape=\"circle\" icon=\"eye\" onClick={this.openArticleInWeb(item)} />\n                            ]}>\n                            <div style={{ width: \"100%\", wordBreak: \"break-all\" }}>\n                                {item.title}\n                            </div>\n                        </List.Item >\n                    )}\n                />\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.ps = new PerfectScrollbar(this.refs.sider);\n    }\n\n    componentDidUpdate() {\n        this.ps.update();\n    }\n\n    componentWillUnmount() {\n        this.ps.destroy();\n        this.ps = null;\n    }\n}\n\nexport default Sider;\n","import axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nvar URL = {\n    'article': '/api/article/',\n    'tag': '/api/tag/',\n    'corpus': '/api/corpus/',\n    'reference': '/api/reference/',\n    'image': '/api/image/',\n    'render': '/api/render/',\n}\n\nconst ap = axios.create({\n    xsrfHeaderName: 'X-CSRFToken',\n    xsrfCookieName: 'csrftoken',\n})\n\nexport const getRender = (data) => {\n    return ap.post(URL['render'], {\"source\": data})\n}\n\nexport const push = () => {\n    return axios.get('/push');\n}\n\nexport const getAllArticle = () => {\n    return axios.get(URL['article']);\n}\n\nexport const newArticle = (data) => {\n    return ap.post(URL['article'], data)\n}\n\nexport const alterArticle = (id, data) => {\n    return ap.patch(URL['article'] + \"?id=\" + id, data)\n}\n\nexport const getArticle = (id) => {\n    return axios.get(URL['article'] + \"?id=\" + id)\n}\n\nexport const newImage = (article_id, image) => {\n    let data = new FormData();\n    data.append('file', image);\n    data.append('article', article_id);\n    return ap.post(URL['image'], data, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    })\n}\n\nexport const delImage = (image_id) => {\n    return ap.delete(URL['image'] + '?id=' + image_id)\n}\n\nexport const getAllTag = () => {\n    return axios.get(URL['tag']);\n}\n\nexport const newTag = (data) => {\n    return ap.post(URL['tag'], data);\n}\n\nexport const getAllCorpus = () => {\n    return axios.get(URL['corpus']);\n}\n\nexport const newCorpus = (data) => {\n    return ap.post(URL['corpus'], data);\n}\n","import React from 'react';\nimport { message, Button, Drawer, Form, Input, Select, Checkbox, Modal, notification, Tooltip } from 'antd';\nimport { newArticle, alterArticle, newTag, newCorpus } from '../../../Api/api';\n\n\nconst CorpusCreateForm = Form.create({ name: 'form_in_modal' })(\n    // eslint-disable-next-line\n    class extends React.Component {\n        onCancel = () => {\n            this.props.setVisible(false);\n        }\n        onCreate = () => {\n            let data = this.props.form.getFieldsValue();\n            newCorpus(data).then(rep => {\n                let corpus = rep.data.data;\n                this.props.pushCorpus(corpus);\n                message.success(\"新建文集成功\");\n            }).catch(err => {\n                notification.error({\n                    message: '新建文集失败',\n                    description: err.response.data.message || err.message,\n                    duration: 0,\n                });\n                console.log({ err });\n            }).then(() => {\n                this.props.setVisible(false);\n            });\n        }\n\n        render() {\n            const {\n                visible, form,\n            } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={visible}\n                    title=\"新建文集\"\n                    okText=\"新建\"\n                    onCancel={this.onCancel}\n                    onOk={this.onCreate}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"名称\">\n                            {getFieldDecorator('name', {\n                                rules: [{ required: true, message: '请填写Corpus的名称' }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            );\n        }\n    }\n);\n\nexport const ArticleForm = Form.create()(\n    class extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                submiting: false,\n                addCorpusStatus: false,\n            }\n        }\n\n        setAddCorpusStatus = status => {\n            this.setState({ addCorpusStatus: status });\n        }\n\n        render() {\n            const { visible, initArticle, form } = this.props;\n            const { getFieldDecorator } = form;\n            const formItemLayout = {\n                labelCol: {\n                    sm: { span: 4 },\n                },\n                wrapperCol: {\n                    sm: { span: 15 },\n                },\n            };\n            const formCheckboxLayout = {\n                labelCol: {\n                    sm: { span: 4 },\n                },\n                wrapperCol: {\n                    sm: { span: 20 },\n                },\n            }\n\n            return (\n                <Drawer\n                    title={(initArticle !== null && initArticle.title) || \"新建文章\"}\n                    width={500}\n                    onClose={this.onClose}\n                    visible={visible}\n                    style={{\n                        overflow: 'auto',\n                        height: '100%'\n                    }}\n                >\n                    <CorpusCreateForm\n                        visible={this.state.addCorpusStatus}\n                        setVisible={this.setAddCorpusStatus}\n                        pushCorpus={this.props.pushCorpus}\n                    />\n                    <Form>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"标题\"\n                        >\n                            {getFieldDecorator('title', {\n                                initialValue: initArticle !== null ? initArticle.title : \"\",\n                                rules: [\n                                    { required: true, message: '请输入文章的标题' },\n                                    { max: 25, message: '最长不超过25个字符' },\n                                    { whitespace: true },\n                                ],\n                            })(\n                                <Input placeholder=\"文章标题\" />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"Slug\"\n                        >\n                            {getFieldDecorator('slug', {\n                                initialValue: initArticle !== null ? initArticle.slug : \"\",\n                                rules: [\n                                    { required: true, message: '请输入文章的slug' },\n                                    { max: 50, message: '最长不超过50个字符' },\n                                    { whitespace: true },\n                                ],\n                            })(\n                                <Input placeholder=\"文章链接\" />\n                            )}\n                        </Form.Item>\n\n                        <Form.Item\n                            {...formCheckboxLayout}\n                            label=\"全体可见\"\n                        >\n                            {getFieldDecorator('is_public', {\n                                valuePropName: 'checked',\n                                initialValue: initArticle !== null ? initArticle.is_public : true,\n                            })(\n                                <Checkbox disabled={initArticle === null} />\n                            )}\n                            <p style={{ \"display\": \"inline-block\", marginLeft: \"1em\", marginBottom: 0, fontSize: \"0.8em\", color: \"#bbb\" }}>\n                                {\n                                    this.props.form.getFieldsValue().is_public ? '公开发表文章' : '仅能通过链接访问文章'\n                                }\n                            </p>\n                        </Form.Item>\n\n                        <Form.Item\n                            {...formCheckboxLayout}\n                            label=\"暂不发布\"\n                        >\n                            {getFieldDecorator('is_draft', {\n                                valuePropName: 'checked',\n                                initialValue: initArticle !== null ? initArticle.is_draft : true,\n                            })(\n                                <Checkbox disabled={initArticle === null} />\n                            )}\n                            <p style={{ \"display\": \"inline-block\", marginLeft: \"1em\", marginBottom: 0, fontSize: \"0.8em\", color: \"#bbb\" }}>\n                                {\n                                    this.props.form.getFieldsValue().is_draft ? '文章为草稿状态' : '文章处于可发布状态'\n                                }\n                            </p>\n                        </Form.Item>\n\n                        <Form.Item\n                            {...formCheckboxLayout}\n                            label=\"时效警告\"\n                        >\n                            {getFieldDecorator('has_timeliness', {\n                                valuePropName: 'checked',\n                                initialValue: initArticle !== null ? initArticle.has_timeliness : true,\n                            })(\n                                <Checkbox disabled={initArticle === null} />\n                            )}\n                            <p style={{ \"display\": \"inline-block\", marginLeft: \"1em\", marginBottom: 0, fontSize: \"0.8em\", color: \"#bbb\" }}>\n                                {\n                                    this.props.form.getFieldsValue().has_timeliness ? '文章存在时效性' : '文章无时效警告'\n                                }\n                            </p>\n                        </Form.Item>\n\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"标签\"\n                        >\n                            {getFieldDecorator('tags', {\n                                initialValue: initArticle !== null ? initArticle.tags.map(item => { return item.name }) : [],\n                            })(\n                                <Select\n                                    mode=\"tags\"\n                                    placeholder=\"输入标签\"\n                                    style={{ width: '100%' }}\n                                >\n                                    {this.props.tags.map(item => (\n                                        <Select.Option key={item.id} value={item.name}>\n                                            {item.name}\n                                        </Select.Option>\n                                    ))}\n                                </Select>\n                            )}\n                        </Form.Item>\n\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"文集\"\n                        >\n                            {getFieldDecorator('corpus', {\n                                initialValue: initArticle !== null && initArticle.corpus !== null ? initArticle.corpus.id : \"\",\n                            })(\n                                <Select\n                                    placeholder=\"选择文集\"\n                                    style={{ width: '100%' }}\n                                    allowClear={true}\n                                >\n                                    {this.props.corpuses.map(item => (\n                                        <Select.Option key={item.id} value={item.id}>\n                                            {item.name}\n                                        </Select.Option>\n                                    ))}\n                                </Select>\n                            )}\n                            <Tooltip placement=\"bottom\" title=\"新增文集\" arrowPointAtCenter>\n                                <Button\n                                    style={{ position: \"absolute\", right: '-41px', bottom: '-5px' }}\n                                    shape=\"circle\"\n                                    icon=\"plus\"\n                                    onClick={() => { this.setAddCorpusStatus(true); }}\n                                />\n                            </Tooltip>\n                        </Form.Item>\n\n                    </Form>\n\n                    <div\n                        style={{\n                            position: 'absolute',\n                            left: 0,\n                            bottom: 0,\n                            width: '100%',\n                            borderTop: '1px solid #e9e9e9',\n                            padding: '10px 16px',\n                            background: '#fff',\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={this.onClose} style={{ marginRight: 8 }}>取消</Button>\n                        <Button onClick={this.onSubmit} type=\"primary\" loading={this.state.submiting}>提交</Button>\n                    </div>\n                </Drawer>\n            );\n        }\n\n        onClose = () => {\n            this.props.setVisible(false);\n            this.props.form.resetFields();\n        }\n\n        onSubmit = () => {\n            let data = this.props.form.getFieldsValue();\n            data.source = this.props.source;\n            data.body = this.props.body;\n            this.setState({ submiting: true });\n            let _tags = [], _lock = 0;\n            for (let i = 0; i < data.tags.length; i++) {\n                let j = 0;\n                for (; j < this.props.tags.length; j++) {\n                    if (data.tags[i] === this.props.tags[j].name) {\n                        _tags.push(this.props.tags[j].id);\n                        break;\n                    }\n                }\n                if (this.props.tags.length === j) {\n                    _lock++;\n                    newTag({ \"name\": data.tags[i] }).then(rep => {\n                        let tag = rep.data.data;\n                        _tags.push(tag.id);\n                        message.success(`自动创建标签${data.tags[i]}成功`)\n                        this.props.pushTag(tag);\n                    }).catch(err => {\n                        console.log({ err })\n                        message.success(`自动创建标签${data.tags[i]}失败`)\n                    }).then(() => {\n                        _lock--;\n                    })\n                }\n            }\n            (function _submit(self) {\n                setTimeout((self) => {\n                    if (_lock !== 0) {\n                        _submit();\n                        return;\n                    }\n                    data.tags = _tags;\n                    if (self.props.initArticle === null) {\n                        newArticle(data).then(rep => {\n                            let article = rep.data.data;\n                            self.props.pushArticle(article);\n                            self.props.setEditedArticle(article);\n                            self.props.setVisible(false);\n                            message.success(\"新建文章成功\")\n                        }).catch(err => {\n                            notification.error({\n                                message: '新建文章失败',\n                                description: err.response.data.message || err.message,\n                                duration: 0,\n                            });\n                            console.log({ err });\n                        }).then(() => {\n                            self.setState({ submiting: false });\n                            self.onClose();\n                        })\n                    }\n                    else {\n                        alterArticle(self.props.initArticle.id, data).then(rep => {\n                            self.props.pushArticle(self.props.initArticle);\n                            self.props.setEditedArticle(self.props.initArticle);\n                            message.success(\"修改文章信息成功\")\n                        }).catch(err => {\n                            notification.error({\n                                message: '修改文章信息失败',\n                                description: err.response.data.message || err.message,\n                                duration: 0,\n                            });\n                            console.log({ err });\n                        }).then(() => {\n                            self.setState({ submiting: false });\n                            self.onClose();\n                        })\n                    }\n                }, 500, self);\n            })(this);\n        }\n\n    });\n","import React from 'react';\nimport ClipboardJS from 'clipboard';\nimport { message, Button, Drawer, Icon, Modal, List } from 'antd';\nimport { newImage, delImage } from '../../../Api/api';\n\nvar clipboard = new ClipboardJS('.copy-image-text');\n\nclipboard.on('success', function (e) {\n    message.success(\"成功复制：\" + e.text);\n\n    e.clearSelection();\n});\n\nclipboard.on('error', function (e) {\n    message.error(\"复制出错\");\n    console.error('Action:', e.action);\n    console.error('Trigger:', e.trigger);\n});\n\nclass UploadImage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploading: false\n        }\n    }\n\n    onError = () => {\n\n        this.setState({ uploading: false });\n    }\n    onSuccess = () => {\n\n        this.setState({ uploading: false });\n    }\n    check = (event) => {\n        let input = event.target;\n        if (input.files.length === 0) {\n            return;\n        }\n        let obj = {\n            file: input.files[0],\n            onError: this.onError,\n            onSuccess: this.onSuccess,\n        }\n        this.setState({ uploading: true });\n        this.props.submit(obj);\n    }\n\n    render() {\n        return (\n            <div style={{ position: \"relative\", textAlign: 'center' }}>\n                <div style={{ position: \"relative\", zIndex: -1 }}>\n                    <Icon type=\"plus\" />\n                    <div>Upload</div>\n                </div>\n                <div style={{\n                    position: \"absolute\", zIndex: 0,\n                    top: 0, bottom: 0, left: 0, right: 0\n                }}></div>\n                {\n                    !this.state.uploading && <input style={{\n                        position: \"absolute\", zIndex: 0,\n                        top: 0, bottom: 0, left: 0, right: 0, opacity: 0,\n                        cursor: 'pointer'\n                    }} type='file' accept=\"image/*\" onChange={this.check} />\n                }\n            </div>\n        )\n    }\n}\n\nexport class ImageList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            previewVisible: false,\n            previewImage: '',\n            filelist: [],\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.initArticle !== null) {\n            if (this.props.initArticle !== null) {\n                this.setState({ filelist: this.props.initArticle.image });\n            }\n        }\n        else {\n            this.setState({ filelist: [] });\n        }\n    }\n\n    handlePreviewCancel = () => this.setState({ previewVisible: false })\n    handlePreview = (file) => {\n        this.setState({\n            previewImage: file.url || file.thumbUrl,\n            previewVisible: true,\n        });\n    }\n\n    onClose = () => {\n        this.props.setVisible(false);\n    }\n\n    uploadImage = (obj) => {\n        newImage(this.props.initArticle.id, obj.file).then(rep => {\n            let filelist = this.state.filelist;\n            filelist.push(rep.data.data);\n            this.setState({ 'filelist': filelist });\n            message.success(rep.data.message);\n            obj.onSuccess();\n        }).catch(err => {\n            message.error(\"上传失败, 详细错误请看控制台\");\n            obj.onError();\n            console.log({ err })\n        });\n    }\n    deleteImage = (image_id) => {\n        return () => {\n            delImage(image_id).then(rep => {\n                let filelist = this.state.filelist;\n                for (let i = 0; i < filelist.length; i++) {\n                    if (filelist[i].id === image_id) {\n                        filelist.splice(i, 1);\n                    }\n                }\n                this.setState({ 'filelist': filelist });\n                message.success(rep.data.message);\n            }).catch(err => {\n                message.error(\"删除失败, 详细错误请看控制台\");\n                console.log({ err });\n            });\n        }\n    }\n\n    render() {\n        const { visible, initArticle } = this.props;\n        const { previewVisible, previewImage, filelist } = this.state;\n\n        if (initArticle === null) {\n            return (\n                <Drawer\n                    title={'图片管理'}\n                    width={500}\n                    onClose={this.onClose}\n                    visible={visible}\n                    style={{\n                        overflow: 'auto'\n                    }}\n                />\n            );\n        }\n\n        return (\n            <Drawer\n                title={initArticle.title + ' - 图片管理'}\n                width={500}\n                onClose={this.onClose}\n                visible={visible}\n                style={{\n                    overflow: 'auto'\n                }}\n            >\n                <List\n                    style={{ minHeight: \"100%\" }}\n                    size=\"large\"\n                    header={null}\n                    footer={\n                        <UploadImage\n                            submit={this.uploadImage}\n                        />\n                    }\n                    bordered\n                    dataSource={filelist}\n                    renderItem={item => (\n                        <List.Item\n                            actions={[\n                                <Button className=\"copy-image-text\" shape=\"circle\" icon=\"copy\"\n                                    data-clipboard-text={'![](' + item.file + ')'}\n                                />,\n                                // <Button shape=\"circle\" icon=\"eye\" onClick={null} />,\n                                <Button shape=\"circle\" icon=\"delete\" onClick={this.deleteImage(item.id)} />,\n                            ]}>\n                            <a href={item.file} target=\"_blank\" rel=\"noopener noreferrer\" style={{ width: \"100%\" }}>\n                                <div style={{\n                                    width: \"100%\", height: '4em',\n                                    backgroundImage: 'url(' + item.file + ')',\n                                    backgroundSize: '100% auto',\n                                    backgroundPosition: 'center center'\n                                }}></div>\n                            </a>\n                        </List.Item >\n                    )}\n                />\n\n                <Modal\n                    width={'auto'}\n                    visible={previewVisible}\n                    footer={null}\n                    onCancel={this.handlePreviewCancel}\n                >\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n            </Drawer>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Row, Col, Button, Tooltip, message } from 'antd';\nimport MonacoEditor from 'react-monaco-editor';\nimport 'monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution';\nimport 'monaco-editor/esm/vs/editor/contrib/find/findController.js';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\nimport { alterArticle, push, getRender } from '../../Api/api';\nimport { ArticleForm } from './Form/ArticleDetail';\nimport { ImageList } from './Form/ImageList';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.save_task = null;\n        this.render_task = null;\n        this.state = {\n            code: \"\",\n            html: \"\",\n            saving: false,\n            detailVisible: false,\n            imagesVisible: false,\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.editedArticle !== null) {\n            if (this.props.editedArticle === null || nextProps.editedArticle.source !== this.props.editedArticle.source) {\n                this.setState({\n                    code: nextProps.editedArticle.source,\n                    html: nextProps.editedArticle.body\n                });\n            }\n        } else {\n            if (this.editedArticle !== null) {\n                this.setState({\n                    code: \"\",\n                    html: \"\"\n                });\n            }\n        }\n    }\n\n    setDetailVisible = (visible) => {\n        this.setState({ detailVisible: visible });\n    }\n    setImageVisible = (visible) => {\n        this.setState({ imagesVisible: visible });\n    }\n\n    push = () => {\n        push().then(rep => {\n            message.success(\"正在push到远程库\");\n        }).catch(err => {\n            message.error(\"出现了一些差错\");\n        })\n    }\n\n    renderMarkdown = code => {\n        if (this.render_task !== null) {\n            clearTimeout(this.render_task);\n        }\n        this.render_task = setTimeout(code => {\n            getRender(code).then(rep => {\n                this.setState({ html: rep.data.data.result });\n            }).catch(err => {\n                console.log(\"渲染出现了点问题\", { err });\n            })\n        }, 500, code);\n    }\n    onCodeChange = (newCode, e) => {\n        this.setState({ code: newCode });\n        this.renderMarkdown(newCode);\n        if (this.props.editedArticle !== null) {\n            if (this.save_task !== null) {\n                clearTimeout(this.save_task);\n            }\n            this.save_task = setTimeout(() => {\n                this.save();\n            }, 5000);\n        }\n    }\n    save = () => {\n        this.setState({ saving: true })\n        alterArticle(this.props.editedArticle.id, { 'source': this.state.code, 'body': this.state.html })\n            .then(() => {\n                message.success(\"文章内容保存成功\")\n            }).catch(() => {\n                message.error(\"文章内容保存失败\")\n            }).then(() => {\n                this.setState({ saving: false });\n            })\n        if (this.save_task !== null) {\n            clearTimeout(this.save_task);\n            this.save_task = null;\n        }\n    }\n    handleKeyDown = (event) => {\n        let charCode = String.fromCharCode(event.which).toLowerCase();\n        // For MAC we can use metaKey to detect cmd key\n        if ((event.ctrlKey && charCode === 's') || (event.metaKey && charCode === 's')) {\n            event.preventDefault();\n            if (this.props.editedArticle !== null) {\n                this.save()\n            }\n        }\n    }\n\n    render() {\n        let { detailVisible, imagesVisible, code, html, saving } = this.state;\n        const options = {\n            fontSize: '16',\n            selectOnLineNumbers: true,\n            wordWrap: true,\n            minimap: {\n                enabled: false\n            }\n        };\n        const editedArticle = this.props.editedArticle;\n        return (\n            <Row gutter={0} style={{ height: \"100%\" }} onKeyDown={this.handleKeyDown}>\n                <Col span={24} style={{ borderBottom: \"1px solid #d9d9d9\", position: \"relative\" }}>\n\n                    <div style={{\n                        position: \"absolute\",\n                        display: \"inline-block\",\n                        height: '100%',\n                        textAlign: 'center',\n                        left: 0,\n                        right: 0,\n                        lineHeight: '40px'\n                    }}>\n                        {(editedArticle != null && '正在编辑 - ' + editedArticle.title) || 'Maltose 编辑器'}\n                    </div>\n\n                    <div style={{ display: \"inline-block\" }}>\n                        <Tooltip placement=\"bottomLeft\" title={(editedArticle !== null && '编辑文章') || '新建文章'}\n                            arrowPointAtCenter>\n                            <Button size=\"large\" shape=\"circle\"\n                                icon={(editedArticle !== null && 'form') || 'file-add'}\n                                onClick={() => {\n                                    this.setDetailVisible(true)\n                                }}\n                            />\n                        </Tooltip>\n\n                        <Tooltip placement=\"bottom\" title={'关闭编辑'} arrowPointAtCenter>\n                            <Button size=\"large\" shape=\"circle\" icon=\"close-circle\"\n                                onClick={() => {\n                                    this.props.setEditedArticle(null)\n                                }}\n                            />\n                        </Tooltip>\n\n                        <Tooltip placement=\"bottom\" title={'保存内容'} arrowPointAtCenter>\n                            <Button size=\"large\" shape=\"circle\" icon=\"save\"\n                                onClick={this.save}\n                                disabled={editedArticle === null}\n                                loading={saving}\n                            />\n                        </Tooltip>\n\n                        <Tooltip placement=\"bottom\" title={'图片管理'} arrowPointAtCenter>\n                            <Button size=\"large\" shape=\"circle\" icon=\"picture\"\n                                disabled={editedArticle === null}\n                                onClick={() => {\n                                    this.setImageVisible(true)\n                                }}\n                            />\n                        </Tooltip>\n\n                    </div>\n\n                    <div style={{ display: \"inline-block\", float: \"right\" }}>\n                        <Tooltip placement=\"bottom\" title={'git push'} arrowPointAtCenter>\n                            <Button size=\"large\" shape=\"circle\" icon=\"arrow-up\"\n                                onClick={() => {\n                                    this.push()\n                                }}\n                            />\n                        </Tooltip>\n                        <a href='/accounts/logout/'>\n                            <Tooltip placement=\"bottomRight\" title=\"退出登录\" arrowPointAtCenter>\n                                <Button size=\"large\" shape=\"circle\" icon=\"logout\" />\n                            </Tooltip>\n                        </a>\n                    </div>\n\n                </Col>\n                <Col span={12} style={{ height: 'calc(100% - 41px)' }}>\n                    <MonacoEditor\n                        width={'100%'}\n                        height={'100%'}\n                        language=\"markdown\"\n                        theme=\"vs\"\n                        value={code}\n                        options={options}\n                        onChange={this.onCodeChange}\n                    />\n                </Col>\n                <Col span={12} style={{ height: 'calc(100% - 41px)', overflowY: 'auto' }}>\n                    <div id=\"markdown\"\n                        className=\"markdown-body ps\"\n                        style={{ padding: '20px' }}\n                        dangerouslySetInnerHTML={{ __html: html }}>\n                    </div>\n                </Col>\n\n                <ArticleForm\n                    visible={detailVisible}\n                    setVisible={this.setDetailVisible}\n                    initArticle={this.props.editedArticle}\n                    pushArticle={this.props.pushArticle}\n                    setEditedArticle={this.props.setEditedArticle}\n                    tags={this.props.tags}\n                    pushTag={this.props.pushTag}\n                    corpuses={this.props.corpuses}\n                    pushCorpus={this.props.pushCorpus}\n                    source={code}\n                    body={html}\n                />\n\n                <ImageList\n                    visible={imagesVisible}\n                    setVisible={this.setImageVisible}\n                    initArticle={this.props.editedArticle}\n                    setEditedArticle={this.props.setEditedArticle}\n                />\n\n            </Row>\n        );\n    }\n\n    componentDidMount() {\n        this.ps = new PerfectScrollbar(document.querySelector(\"#markdown\"));\n    }\n\n    componentDidUpdate() {\n        this.ps.update();\n    }\n\n    componentWillUnmount() {\n        this.ps.destroy();\n        this.ps = null;\n    }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Row, Col, notification } from 'antd';\nimport './App.css';\nimport Sider from './Components/Sider';\nimport Main from './Components/Main';\n// import Detail from './Components/Detail';\nimport { getAllArticle, getAllTag, getAllCorpus, getArticle } from '../Api/api';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            articles: [],\n            tags: [],\n            corpuses: [],\n            editedArticle: null,\n        }\n    }\n\n    setEditedArticle = (article) => {\n        if (article === null) {\n            this.setState({ editedArticle: article });\n        } else {\n            getArticle(article.id).then(rep => {\n                this.setState({ editedArticle: rep.data.data });\n            }).catch(err => {\n                console.log({ err });\n                notification.error({\n                    message: `获取文章信息: ${article.title} 出现错误`,\n                    description: err.response.data.message || err.message,\n                    duration: 0,\n                });\n            })\n        }\n    }\n    pushArticle = (article) => {\n        let articles = this.state.articles,\n            i;\n        for (i = 0; i < articles.length; i++) {\n            if (article.id === articles[i].id) {\n                articles[i] = article;\n            }\n        }\n        if (i === articles.length) {\n            articles.unshift(article);\n        }\n        this.setState({ 'articles': articles });\n    }\n    pushTag = (tag) => {\n        let tags = this.state.tags,\n            i;\n        for (i = 0; i < tags.length; i++) {\n            if (tag.id === tags[i].id) {\n                tags[i] = tag;\n            }\n        }\n        if (i === tags.length) {\n            tags.push(tag);\n        }\n        this.setState({ 'tags': tags });\n    }\n    pushCorpus = (corpus) => {\n        let corpuses = this.state.corpuses,\n            i;\n        for (i = 0; i < corpuses.length; i++) {\n            if (corpus.id === corpuses[i].id) {\n                corpuses[i] = corpus;\n            }\n        }\n        if (i === corpuses.length) {\n            corpuses.push(corpus);\n        }\n        this.setState({ 'corpuses': corpuses });\n    }\n\n    componentDidMount() {\n        getAllArticle()\n            .then(rep => {\n                this.setState({ articles: rep.data.data });\n            }).catch(err => {\n                console.log({ err });\n                notification.error({\n                    message: '文章列表请求错误',\n                    description: err.response.data.message || err.message,\n                    duration: 0,\n                });\n            });\n        getAllTag()\n            .then(rep => {\n                this.setState({ tags: rep.data.data });\n            }).catch(err => {\n                console.log({ err });\n                notification.error({\n                    message: '标签列表请求错误',\n                    description: err.response.data.message || err.message,\n                    duration: 0,\n                });\n            });\n        getAllCorpus()\n            .then(rep => {\n                this.setState({ corpuses: rep.data.data });\n            }).catch(err => {\n                console.log({ err });\n                notification.error({\n                    message: '文集列表请求错误',\n                    description: err.response.data.message || err.message,\n                    duration: 0,\n                });\n            });\n    }\n\n    render() {\n        const { articles, editedArticle, tags, corpuses } = this.state;\n        return (\n            <Row gutter={0} style={{ height: \"100%\" }}>\n                <Col span={4} style={{ height: \"100%\" }}>\n                    <Sider\n                        articles={articles}\n                        corpuses={corpuses}\n                        setEditedArticle={this.setEditedArticle}\n                    />\n                </Col>\n                <Col span={20} style={{ height: \"100%\" }}>\n                    <Main\n                        editedArticle={editedArticle}\n                        setEditedArticle={this.setEditedArticle}\n                        pushArticle={this.pushArticle}\n                        pushCorpus={this.pushCorpus}\n                        pushTag={this.pushTag}\n                        tags={tags}\n                        corpuses={corpuses}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './view/App';\nimport * as serviceWorker from './serviceWorker';\nimport { LocaleProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\n\nReactDOM.render(\n    <LocaleProvider locale={zh_CN}><App /></LocaleProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}